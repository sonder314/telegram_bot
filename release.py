import telebot
from telebot import types
import random
import re

bot = telebot.TeleBot('5381048754:AAGPxknm4po_gLwRYTSBBDiCtLit4HWgdm8')

# –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, text='<b>–í–æ—Ç –Ω–µ–±–æ–ª—å—à–æ–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, '
                                           '—Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä—ã—Ö —Ç—ã –º–æ–∂–µ—à—å —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –º–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\n\n</b>'
                                           'üìç –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ –±–æ–ª—É—á–∏—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –æ—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É /getsecretinfo\n'
                                           'üìç –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –Ω–µ–º–Ω–æ–≥–æ —É–∑–Ω–∞—Ç—å –æ –ª—é–±–∏–º—ã—Ö —Ç—Ä–µ–∫–∞—Ö —Å–∫—Ä–æ–º–Ω–µ–π—à–µ–≥–æ '
                                           '—Å–æ–∑–¥–∞—Ç–µ–ª—è —ç—Ç–æ–≥–æ –±–æ—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É /get_tracks\n'
                                           'üìç –ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –¥–µ–º–æ-–º–µ–Ω—é –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—á–∏–∫–∞, –æ—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É /chum\n'
                                           'üìç –ï—Å–ª–∏ –∂–µ —Ç–µ–±—è –∏–Ω–µ—Ç–µ—Ä–µ—Å—É–µ—Ç –ø–æ–∫—É–ø–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤, –æ—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É /store\n'
                                           'üìç –ë–∏—Ç–∫–æ–π–Ω –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å, –≤–≤–µ–¥—è –∫–æ–º–∞–Ω–¥—É /btc\n'
                                           'üìç –ï—Å–ª–∏ –≤–∞–º –≤–µ–∑–∞–ø–Ω–æ –ø–æ–Ω–∞–¥–æ–±–∏–ª–æ—Å—å —Ä–µ—à–∏—Ç—å –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ, '
                                           '–≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /equation\n'
                                           'üìç –£—Å–ª—É–≥–∏ –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ —à–∞—Ä–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –ø–æ –∫–æ–º–∞–Ω–¥–µ /magic_ball',
                                            parse_mode='HTML')
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    back = types.KeyboardButton(text='/menu', )
    kb.add(back)
    bot.send_message(message.chat.id, text=' –í –ª—é–±–æ–π  –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ –≤–≤–æ–¥–∏ –∫–æ–º–∞–Ω–¥—É /menu –ª–∏–±–æ –∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑—É',
                     reply_markup=kb)


@bot.message_handler(commands=['menu'])
def menu(message):
    start(message)


@bot.message_handler(commands=['getsecretinfo'])
def rickroll(message):
    kb = types.InlineKeyboardMarkup()
    link = types.InlineKeyboardButton(text='–°–µ–∫—Ä–µ—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', url='https://www.youtube.com/watch?v=FuJM-90oMvo')
    kb.add(link)
    bot.send_message(message.chat.id, text='–ü–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é', reply_markup=kb)


# –ª—é–±–∏–º—ã–µ –∏ –Ω–µ–ª—é–±–∏–º—ã–µ –ø–µ—Å–Ω–∏ —á–µ—Ä–µ–∑ inline callback –∏ url –∫–Ω–æ–ø–∫–∏
@bot.message_handler(commands=['get_tracks'])
def get_tracks(message):
    kb = types.InlineKeyboardMarkup(row_width=2)
    love = types.InlineKeyboardButton(text='–ú–æ–∏ –ª—é–±–∏–º—ã–µ —Ç—Ä–µ–∫–∏!', callback_data='love')
    hate = types.InlineKeyboardButton(text='–ù–µ–Ω–∞–≤–∏–∂—É —ç—Ç–∏ —Ç—Ä–µ–∫–∏!', callback_data='hate')
    kb.add(love, hate)
    bot.send_message(message.chat.id, text='–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ:', reply_markup=kb)


@bot.callback_query_handler(func=lambda x: x.data in ['love', 'hate'])
def callback(callback):
    kb = types.InlineKeyboardMarkup(row_width=1)
    if callback.data == 'love':
        shrek = types.InlineKeyboardButton(text='Shreksophone 10 hours', url='https://www.youtube.com/watch?v=pxw-5qfJ1dk')
        hoiser = types.InlineKeyboardButton(text='Take me to church', url='https://www.youtube.com/watch?v=PVjiKRfKpPI')
        grieg = types.InlineKeyboardButton(text='In the Hall of the Mountain King by genius Deniska',
                                           url='https://www.youtube.com/watch?v=0nZhw3wifeY')
        kb.add(shrek, hoiser, grieg)
        bot.send_message(callback.message.chat.id, text='–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ, –æ–ø—è—Ç—å –≤–≤–µ–¥–∏—Ç–µ /get_tracks. '
                                                        '–í–æ—Ç –º–æ–∏ –ª—é–±–∏–º—ã–µ —Ç—Ä–µ–∫–∏:', reply_markup=kb)
    else:
        buzova = types.InlineKeyboardButton(text='–û–ª–µ—á–∫–∞ –ë—É–∑–æ–≤–∞', url='https://www.youtube.com/watch?v=gUGu0F02p9Y')
        kb.add(buzova)
        bot.send_message(callback.message.chat.id, text='–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ, –≤–≤–µ–¥–∏—Ç–µ /get_tracks. '
                                                        '–í–æ—Ç –ø–µ—Å–Ω—è, –∫–æ—Ç–æ—Ä–∞—è –º–Ω–µ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è:', reply_markup=kb)


# –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(commands=['chum'])
def chum(message):
    kb = types.InlineKeyboardMarkup()
    menu = types.InlineKeyboardButton(text='–ú–µ–Ω—é', callback_data='menu')
    kb.add(menu)
    bot.send_message(message.chat.id, text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω Chum Bucket!', reply_markup=kb)


@bot.callback_query_handler(func=lambda x: x.data in ['menu', 'wat', 'again'])
def callback(callback):
    kb = types.InlineKeyboardMarkup()
    if callback.data == 'menu':
        water = types.InlineKeyboardButton(text='–í–æ–¥–∞', callback_data='wat')
        back = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='again')
        kb.add(water, back)
        bot.edit_message_text(chat_id=callback.message.chat.id, text='–í–æ—Ç –Ω–∞—à–µ –º–µ–Ω—é',
                              reply_markup=kb, message_id=callback.message.message_id)
    elif callback.data == 'wat':
        back = types.InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data='menu')
        kb.add(back)
        bot.edit_message_text(chat_id=callback.message.chat.id, text='–ü—Ä–æ—Å—Ç–∏—Ç–µ, –≤–æ–¥—ã –Ω–µ—Ç, –º—ã –±–∞–Ω–∫—Ä–æ—Ç—ã',
                              reply_markup=kb, message_id=callback.message.message_id)
    elif callback.data == 'again':
        menu = types.InlineKeyboardButton(text='–ú–µ–Ω—é', callback_data='menu')
        kb.add(menu)
        bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id,
                              text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω Chum Bucket!', reply_markup=kb)


# –†–∞–±–æ—Ç–∞ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π, "–ò–Ω—Ç—Ä–µ–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω"
@bot.message_handler(commands=['store'])
def store(message):
    kb = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True, one_time_keyboard=True)
    buy = types.KeyboardButton(text="–ö—É–ø–∏—Ç—åüéÅ")
    kb.add(buy)
    bot.send_message(message.chat.id, text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω', reply_markup=kb)


@bot.message_handler(func=lambda message: message.text in ['–ö—É–ø–∏—Ç—åüéÅ', '–ö–∞–º–µ–Ω—å —Å –≥–ª–∞–∑–∞–º–∏', '–ù–∞–∑–∞–¥'])
def buy(message):
    if message.text == '–ö—É–ø–∏—Ç—åüéÅ':
        kb = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True, one_time_keyboard=True)
        stone = types.KeyboardButton(text='–ö–∞–º–µ–Ω—å —Å –≥–ª–∞–∑–∞–º–∏')
        back = types.KeyboardButton(text='–ù–∞–∑–∞–¥')
        kb.add(stone, back)
        bot.send_message(message.chat.id, text='–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?', reply_markup=kb)
    elif message.text == '–ö–∞–º–µ–Ω—å —Å –≥–ª–∞–∑–∞–º–∏':
        photo = open('Pete_the_rock.png', 'rb')
        bot.send_photo(message.chat.id, photo, '–¢–æ–≤–∞—Ä: –∫–∞–º–µ–Ω—å —Å –≥–ª–∞–∑–∞–º–∏\n'
                                               '–¶–µ–Ω–∞: 1000$\n'
                                               '–í –Ω–∞–ª–∏—á–∏–∏: 2')
        bot.send_message(message.chat.id, text="–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /store")
    else:
        store(message)


# —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.message_handler(commands=['btc'])
def fraud(message):
    bot.send_message(message.chat.id, '–•–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –±–∏—Ç–∫–æ–∏–Ω?\n–ü–∏—à–∏—Ç–µ "/buy"')


@bot.message_handler(commands=['buy'])
def buy(message):
    bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id-1, text='–•–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å —Å–≤–µ–∂–∞–π—à–µ–≥–æ –±–∞—Ä–∞–Ω–∞?')
    bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –∫–∏–ª–æ?')


# –º–∞–≥–∏—á–µ—Å–∫–∏–π —à–∞—Ä
@bot.message_handler(commands=['magic_ball'])
def magic_ball(message):
    bot.send_message(message.chat.id, text='–ü—Ä–∏–≤–µ—Ç –ú–∏—Ä, —è –º–∞–≥–∏—á–µ—Å–∫–∏–π —à–∞—Ä, –∏ —è –∑–Ω–∞—é –æ—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å.')

    send = bot.send_message(message.chat.id, text='–ó–∞–¥–∞–π —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å')
    bot.register_next_step_handler(send, return_answer)


def return_answer(message):
    answers = ['–ë–µ—Å—Å–ø–æ—Ä–Ω–æ', '–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è - –¥–∞', '–ü–æ–∫–∞ –Ω–µ—è—Å–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞', '–î–∞–∂–µ –Ω–µ –¥—É–º–∞–π', '–ü—Ä–µ–¥—Ä–µ—à–µ–Ω–æ',
               '–í–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ', '–°–ø—Ä–æ—Å–∏ –ø–æ–∑–∂–µ', '–ú–æ–π –æ—Ç–≤–µ—Ç - –Ω–µ—Ç', '–ù–∏–∫–∞–∫–∏—Ö —Å–æ–º–Ω–µ–Ω–∏–π', '–•–æ—Ä–æ—à–∏–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã',
               '–õ—É—á—à–µ –Ω–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å', '–ü–æ –º–æ–∏–º –¥–∞–Ω–Ω—ã–º - –Ω–µ—Ç', '–û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ –¥–∞', '–ó–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç - –¥–∞',
               '–°–µ–π—á–∞—Å –Ω–µ–ª—å–∑—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å', '–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –Ω–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–µ', '–ú–æ–∂–µ—à—å –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω –≤ —ç—Ç–æ–º', '–î–∞',
               '–í–µ—Å—å–º–∞ —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω–æ']

    kb = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2, one_time_keyboard=True)
    yes = types.KeyboardButton(text='–î–∞')
    no = types.KeyboardButton(text='–ù–µ—Ç')
    kb.add(yes, no)

    if message.text == '–ù–µ—Ç':
        bot.send_message(chat_id=message.chat.id, text='–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã!')
    elif message.text == '–î–∞':
        send = bot.send_message(message.chat.id, text='–ó–∞–¥–∞–π —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å')
        bot.register_next_step_handler(send, return_answer)
    else:
        bot.send_message(message.chat.id, text=f'{random.choice(answers)}')
        ans = bot.send_message(message.chat.id, text='–û—Å—Ç–∞–ª–∏—Å—å –µ—â—ë –≤–æ–ø—Ä–æ—Å—ã?', reply_markup=kb)
        bot.register_next_step_handler(ans, return_answer)


# —Ä–µ—à–µ–Ω–∏–µ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π
@bot.message_handler(commands=['equation'])
def equ(message):
    kb = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    button = types.KeyboardButton('–†–µ—à–∏—Ç—å –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ')
    kb.add(button)
    bot.send_message(chat_id=message.chat.id, text='–ü—Ä–∏–≤–µ—Ç, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?', reply_markup=kb)


@bot.message_handler(func=lambda x: x.text == '–†–µ—à–∏—Ç—å –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ')
def equation(message):
    mes = bot.send_message(chat_id=message.chat.id, text='–í–≤–µ–¥–∏—Ç–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–µ–Ω—Ç—ã ax^2 + bx + c '
                                                         '–≤ –≤–∏–¥–µ a b c\n–ü—Ä–∏–º–µ—Ä: 1 -2 5')
    bot.register_next_step_handler(mes, proc)


def proc(message):
    if re.fullmatch(r'[-+]?\d+ [-+]?\d+ [-+]?\d+', message.text):
        bot.send_message(chat_id=message.chat.id, text='–í—Å—ë –≤–≤–µ–¥–µ–Ω–æ –≤–µ—Ä–Ω–æ. –ù–∞—á–∏–Ω–∞—é —Ä–µ—à–∞—Ç—å —É—Ä–∞–≤–Ω–µ–Ω–∏–µ')
        a, b, c = map(int, message.text.split(' '))
        d = b ** 2 - (4 * a * c)
        bot.send_message(chat_id=message.chat.id, text=f'–î–∏—Å–∫—Ä–∏–º–∏–Ω–∞–Ω—Ç —É—Ä–∞–≤–Ω–µ–Ω–∏—è: {d}')
        if d < 0:
            bot.send_message(chat_id=message.chat.id, text='–£ —É—Ä–∞–≤–Ω–µ–Ω–∏—è –Ω–µ—Ç –∫–æ—Ä–Ω–µ–π')
        elif d == 0:
            bot.send_message(chat_id=message.chat.id, text=f'–£ —É—Ä–∞–≤–Ω–µ–Ω–∏—è 1 –∫–æ—Ä–µ–Ω—å: {-b / (2 * a)}')
        else:
            bot.send_message(chat_id=message.chat.id, text=f'–£ —É—Ä–∞–≤–Ω–µ–Ω–∏—è 2 –∫–æ—Ä–µ–Ω—è\n–ø–µ—Ä–≤—ã–π –∫–æ—Ä–µ–Ω—å: {(-b - d) / (2 * a)}\n'
                                                           f'–≤—Ç–æ—Ä–æ–π –∫–æ—Ä–µ–Ω—å: {(-b + d) / (2 * a)}')

    else:
        mes = bot.send_message(chat_id=message.chat.id, text='–î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
        bot.register_next_step_handler(mes, proc)


bot.polling()
